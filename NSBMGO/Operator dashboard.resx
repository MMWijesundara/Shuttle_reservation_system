<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIMAAACDCAYAAACunahmAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAGk1JREFUeF7tnQd8VMX2x8P7t/f+PoUEFLYkAaRk7+4mlAiGJBRBBQGF7N7dhNBL
        CqE3ASmhiBRpAgIiVZr03iGggAjSpCNVOoQWQBCFeec3mbvZ3QSIEMT3Mt98zmdzz527u3fm3JkzM2dm
        fSQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUTybwfzyaOvH1zS4DQ3
        NNjNw42qspBeUwyqstFgNy012pWJelXpZXQqsa+p1jCjWsKgqMr/iqsl/wlUrlz5v/VOc7RBNW/R25Xf
        DHaFBTqszNKkAgtpFsmCGr7BCkcHM+i95B4ZzAUymC30/ziDakksVE8pV7hOqXzirSX/ThhtpYobVcsm
        FG7JhuVY4vCObOG3y9jx86dY6s1r7MyV8+zImWNs7/H9bOuB7WzV9vVszsZF7ItlU1nfaYNZ4rCOrHa3
        aFa6eSUWmGEwtww2ZScMJMBmceiiTIGodcRHSv5qFHi/5MtG1dqLCiy1aL3SrNfkT9iZy+eYxtofUli1
        DnVYiQaoFUJ4zVA0pjQZzBsspHkki2hdg9l6NSTj6cQGzhjBZqyby1aSocBYZqydy3pPHsjsvRuxUpSW
        ao979Dm79HbzaKo9auriyv6/+BqSF42uVtkCRtW8Gk+xuXEY++7gDmEC6fz2+2+8EHG+WGxZ1mZUVzZ2
        ySQ2dfVsNnHFdDbk61Hsw/HJrNEnLdl7XZ3M2jRcqxG44bzZ8m3WckQnNmv9fLZ53zYu/b76lNXpUZ8V
        iS4F47hJMoKkHH0dWWO8KAIcpmpUCOdQcC2GtGVXbqRyA9i4ZwvrTwV26foVlnbnlqtwIf4OCxW6gz/9
        9+7/SmkusymrZrKZ6+exJVtXsS37t7Pd1IzAqGZvmM+Spwxisf3jWGSb91iA08pejy3DanWPZl3G9ebX
        jVs6hXUhYyrVvCLe/zg5qENJSomvKHnewEk02s0D9XbTg5JU9c/7Zgk3gpMXf2bOvs1cBT+dChwUpxoB
        T/3klTNYBBWqdj6mXwt24dol1mlcL5dOkwByOstTrRBN74fCRs2A5mbF92vJSBawbhP6slrkX6D2gGPa
        dHBrFj+sPXu7UxRTGoc9MNjMm/3t5uiycWX/R3xtSU7j7wy20JO3FQWGwjhFBnDn3i/skxnD+ZMLfTAV
        Dl7RJIAKraqzGCpUcOfuLyyK/AOt0NE8nEu9yJsDTfc4oSaJvZFQlTn6NGF9qNaYnbKAzdu0hA2b+zn5
        FY254cFAtPT+dsvYYq2L/Z/4+pKcItBpjSVDuO+vWtjAmSO4P7D1wA5WIak6z/hWI7twx/GXX++yim1q
        sirta7PfHzxgdXrWpzY+lhsDQHNSNr5yeuHazWz+N0vZeKrutQJ8GnkjoRpr/dmHbMLyaWz0oi/J4Bpw
        wxHnH1KX9Ro3YocyoKDTZBG3JPmj8GbBYR2NjA1LepdtpXb93v17bNCsETzD6/ZswI6dO8nOUdex/ZiP
        WONBSaz7l/1YEHUvU9Ousfih7XlvQuPwzz9x508ryFrdnOwsXYueiKZ7FikSE8JUqiU+/CKZ91agc+uq
        Qh4aVPPcwPomnbhFSXbQR1v8KeOWIBObDmnNzqaeZ6cvnWUNPo7nnv+X9CSeTb3AhswZzccHkO51KlSM
        HeD/HUd2s56TBrDQhLeEKTBqGhLdC4YKrxQ7c+UcdS8beehzQl6vV4a/fr54Ivvp7Ak2fe0cXmOJ80f5
        uIXkieQJdJje09uVU0GNyrMxC7+kKv93XsjwCZoPacOOXzhFDt06FtE6wynUBNV+oDOYjV82hY2YN5Y/
        9RrBTSMypV+9I4V9Nn98Jn1OSZ0eDcSnM/bg4QPWZ+ogXqtRM5WCmk/cs8QbDCIZ7JZPKRPvhZPzd4iq
        9Ss3rrCOY3uysJbvcI8eT3LSiM68wL0zHtJ7ykAWGl+FegK9qRs5h+vu/nqPF4ZXlc0FxgPD8tbnpKDJ
        0pi7cTH1Ot7ken+HqY64dYk7/k7L6+RorYeT2IocspQ9W/h4AMYGML9w4eol3uaXpYL2zmx3QVOAgSF4
        +Gt3buS6n6l5ARh88k4/lJqZ3T/9mEmfk4JBLoAhcQ+DVE1Lxe1LNALsllpkCHwQCYK+fveJ/emJus7m
        pCzibTtqBfQW0F10ZWYWUqldLdZudDf2BhnNodNHuW7bwR94YaDG8E4/Yv44tu/EwUz6nJSEYR3452O8
        wuvcmWI1ZPfThb8a4qRMue2VSVzq9Y9jN++ksTafdWXhrWrw6nbjns2Z0rkLnMt+04bwPv/Fa5e5bvHm
        FbwwalLvwTv9V2u+5s6mtz4nxUq+ykP6W7Ftrfe52wXrBr8msiJ34+8wD/PKnEzSdnRXPoZQunlF1mRQ
        K16oTQa3yjItBEaApx3/wxgwDA2/AGA20zv9Nz9+R7XOmkz6nJaTF06zDbu+9dbfK6wqhUR25Fry+NuV
        r5EZRtWykJqFFsZYq9VXLZv3tRhLQYPD0p3OXUaGwYdYtHkZG7VgAs/A7w7sYD+eOOCdqR4yZtFE/rr/
        1CFuRMnkVIKRwkg0QfNzjZqioXPHeOifh8zftITtObbfW5+WL1fHTST7/C3AaRlscFrjHxdhZKynlCM/
        4iIyrXK72uzE+dPUNQxn9T+O5wX7wUex3hnrklELvuC9jZTd37J3Otv44BPYeXSv++ggsyc3Zg8ePGCV
        2tbyuP55CKbXr9686qm3mY/l6hiJV1sq/xT/PpEAh7k2GcRdZNziLSvZgBnDeGGiyp1Gbb1HxrrJgBnD
        eQ9k7sZFrP6ABFa7ez1uDPA/SrdIH6CCLNqygge7uF/7vASjpcD98+nepolblWQHavOnIuPq9WvBfjp3
        gmfiyHnj+DyDK1O9pAf1RMJbV2djF09iHT/vwcpQL0IDzijS1PhQ5YNAanKTTNc/DzE1Ks8/391vCXAE
        1xa3KckOReuZihvs5jREK128domPIlbrWJdnbJX273tkuCZxQ9vxnsigmSP5xBa6qih4AGe0/1dD+dgD
        Zhyzuv55yeXrqfvGLZuyLP3YfOhVNfu1pESA6WBkIMb5MRGF/xGcgoLWMtpd6pA/gTb6w/F9XHMVFyk9
        ePjwIQ9t856n+DOkbFyVmrgfMs5qhaNLFeY3J/ljBMQqCmXmPQSdrBEDN5gyPnz6p0wZDqnQ6l0e4gbH
        cTH5BdBtP7STGwOo3sWe6Zo/Q3QOSxtxS5JnwaBa1iBD4fAVrx/qGnNAhJF3pmPgCeFsCETZcXgX1329
        YQFPDzDZhWFhLSjmzxKjXRkibkfyLJAj2RQZ2mxwG9Zr0ifcD0Ck07LvVmfKdMxUrvx+HRlKXfYz+QjQ
        DSf/QKPP1ME8YrpMXHqgy58lZAyLxO1I/ghwrvToWtqVAVgYQ13Ka1qmzkpZwF+/TlnIp7erdqjjkemQ
        dbu+4QExMBgcdxrbS5gCY5NWzOBdVGffppmue66iKvvE7UmehC7aEqq3mwci0ww2hIxlkaEkmGOo2dXJ
        YxoBAmO90yz/fi1vLkCJBqG8C6mxftcmnmbQrJEeg1DPW/SqclPcqiRLGMtD1WcsdbX2ZpWBj5LSLVDF
        m9nB00d4vIKtt2e0EiKZETcAIlvX8Ih4OnbuBB/mnrpmNl8k437d85bCjeWyvSwxqkoxf4d1mMFhGWBw
        WlX/6NKhAU1Ci6LbZYyxBAeoprfJV+hIT+9KaiqynNlElDMCZDENrTRKDxqBYL4hLOkdHjOJGgQ1AJoM
        cOP2TWZtEs5ajezMYyC7fdGXL8Rxf9/nJbgvcfsSd8rGxWV7bUGJhmEGf6e5JRnFz+6Zix7Bxr1beCHP
        3bSYL5+DHiOPtbrH8GnvxOEduO7H4wd4Oow1oKlB7YC5jgnLpvElddOopkieOojrgptlDpHLCTE6rO+J
        W5I8K2Htw/5Btclw9wzGIBMKGCDwFIUc1bMhH1jCSCPWTCLduKWTeRqwed93rghmbykWW4avwyyXWI1H
        WuekXxEYU6q5uBVJTmF0BjenzH2gZbK2ugogsmnonDGs7aiuPNTs88WTeBo4lAu+XcbjHO7/dp8vwYPP
        sY4cyimrZ/MRzQ5jerCGZERwULG0rix1PzHpVaJ+KCsSHcINTfvMrASGg6nxoIbluV+DIXMY5cfTh/Ju
        8JItK/YFxljDxG1IcoquE/p01AJj4SC6r8AGiHhCfGPqzauseGyoq8DQlJSNq8KbCoxS9p78CRu9YAJf
        Srd6xwZuTAdOHWbHL5xmpy6e4Uv7j549zsPo9p88xHYf28e+P7STbdn/Pdu0dytL2fMt27h7M4/CSiFZ
        98NGtmrHet6jwdJ/xFEgFK9qhw/SV12pZhn7+CxEtKkZVzqu8iilcdh+o90y5OzFs+gqnNl7bD8r37Ia
        L2QsjL1xOy3dEgjMWm7ev43/j7ULmNfAOks0AZhFfFL1j/OIlMKTjqYDI58YrMKSfryitkCQLYwLI5qP
        ej/UKGWolsDqLlyrtysnfGSY/NNRqV2tDvtOHoJTcOzC1Yu3MHJYq1v0w9/FTOS51Aus87jevH1vMbQd
        u37rBtcv37aGraEn3Rv4F4htwHpN1AJYhQ0nEnEQncb25KOc9l6NWPUuKl+uV558B3wmoqbgZ2CpP+IS
        EGCLtZpV2r1PtUw0X7XdakRnvoIbhrjw2+V8OBwLgO7cu8s/G4uAyECu5+4Ip6fk9QbBr/WZMugiMhLd
        RLBk60r+xKGNdwcxDut2buRGALBjC4JinhUYz/3ffuOfjzENvCKMH11azXHNLtglxmA335GBsE+B0WG2
        oR3H2MA7naN46DwKwEpOHapubezgUazKomZ4UeB7I86CDPkXaQxPAT1Fw+DAIaQd6yuxR9Ov1BPAOAJq
        B4wtPI5r1GQspWagx8SP2c4je/nT/CI4cf4kb0bwnUnuFFJLvypuUcIhJwpPyOMWkpD3PR+rqRCscu3W
        dZ6xiFrS5iMwDP2kqhrT1+3JeDCQ1Gxwa5Y0sjNvzw+eOvJcjQNrJXb/tI9vF9SNnNcT1DsRezjc0sWU
        LSBuUSLIU7hx5b8XcZYOMUZb6vo7rEmFbIpZnOMEOIOXosv4ET3ZaKc1Dv+cvloKw8hX3dYyZgWms0ct
        nMB3cQEolOXU50dt0WRQEoslpy5+aAf28YxhbMqqWWzV9nXc8cMYBSKq4Pw9zuBwLu3ubXr6T/ElfWMW
        f8k3DIHTiZ1eMK7B09EfdpyBMRgalssvblGSFdjpxD/G3NLosCyEr8D3Z3CaZ2DLvuSpg6lQ7vBMBdrU
        NLpz6P8/DhT+5FUz+f5LV9PSaxdvMBaB/ZwwgqltAuIu6DpiW0FL03BWqkVFkkrs7c62tk0HdSlZJCb0
        bUrzi/c1EG2dJ0BEN9aOkj7tFVXxE7cteRxGyiiDah5KBb3d32FeiTZ/yOxR7Hwq71S40DbZWL/rG6F5
        NAimbf1ZV+7A7Ti8+7HNQ7bD51VluTFK6U3/n8l0jgRNAvybExdOsTGLvuQbiwycxeM2b8jZyz8CY3n8
        HZYEo918adjcMWzh5uVsnnAWMZQMMK6ATF+4eRk/fhKozjGC+MXSqazf9KF82R1GDOGgevdKMCTtXrBP
        I/X6t+CfuefYPnZXdIsRmU3nrvmqRfOKO5Vkl6L1ShVvOrj10fNXL56t3sV+D7OQ58mhfECZrG3Jg3jH
        R4FIKHRLswIFdfvuHb5VIHyDG3fSmDaQdfrSGVYuseoTRyk1wSglRkJhRFjet/PIHte4iDsfpUd3p2Iv
        CnGLkj+C0izMb07KnH8GxFgc1iYV1q/fu+mt1dvXxWoFgXb+UVy5cZVt3v+9OPpjpJFxYOEO5h+wGdik
        FdPZ2EWTeJWP2mWmmMtALAW2EsxOz6Tl8E74zpd0tXRyh9mcAnEBmjFgA4+Z6+bx2sIb7PQybknG1PWL
        Rmw/eE7uZJ+DUPU9VzMGTRDgii6nO5dvpPJtf/8KpP1yS9vCZ6u4DcmzEugIqUKe/H1vY4BglzXsx3hd
        +AnwGSyNK7iczhcJ1ojiO1LXOVnciuRZwDa8RqelrcFunkLdz7l6u2Wk0WmtYbSHRFFtsUczCvQ0EFBy
        8vypg5Ft3ruKZuRFAGPcdmgn1U6dhTNqPiWHov8E0A4HxphtRlX5jgyCh9pTATxQGoc9RPwCgk+eVw2B
        ngh2p8No5/glU3jAjLNPM2ZqWN5Va5Hx7g1USxYRX1fyp8B88gQ6g8uQUeAnAC64CoMENQZC2hoPTGKd
        Pu/JV1d9+vVo3kNATMPklTPZ1NWzuGADcvQaRi+cwMPo8BMDWMwLHwRbBLzbxc5jGsR8Q2ahpow+f5/e
        YZnuH21xyn0fXzSq+l8G/ltUSi+Em1EhHSX53aPQnlZU822jajlOr5v1qjKbZLDBYW4fGG2pWVRVAlT6
        bPEtJH9VghsEv1SkfmhJnapEGO3kbzgtUXo7ft/K0oAKs5HBRkKv5IvE6lWT099u/UBnt7xjrBdSLiAm
        xGyIDTbKX6KRSCQSiUQieYH420qGGmxKB4hRNf4DusJq4UKaTh/9uj9PKNDZLKHkzWP3+bl6e9AkvS0o
        xnsdgg4ru8X15BC210cprXW2EnV0MSU8ws2MqrWSlk5nC7IJtQ91C9/S9Pook1OoH0vhxoX/rnMo9fU2
        ZbLBbsKmpwNeiypeVJz2oOA7BV8yOIIa6WymaQababberiTL36AgKDPau7prdlMP6LiBuHQlqvKEhMFZ
        IsRoN93IOCfEpvQXSThkAK7RSE8x/eBbLSOWgAp9aMY583Vtk06j3bxS0+vtpi088ePJQwW6OOO9XHKb
        DDBIpNHIQ9+Db0vkJWmGuuYQkSZ34mkMytW89ay+jzIGesKnQ2e0K9d5lJGq8EKngrhpiCpmFMlcxoAN
        MuhJXWVQzce09ytoM7v2X/Q0BjqnBllRy9D7uwwuO8ZgcCgJWnq69gS9rqHvxH+GmYx3tUjGIX2njLQm
        SmtK0dLSdz3kk5z8N5E09+FlDCRB4/yjSryRcexmDJTJQn+F0tUKVIOL8CqdxH2ETzMGesJ34FjnZlz0
        Hh/wRISbMfBFvEZVaUVSLl1n4rpsGYNN2ZaeVrlcsEHBl0hFT7/SjWQjyTq3Aag89JkHkZbkqI/qw/X0
        Wf2EjlETF8lT5kbcjAEjg2kkdz0NxK2ZsCvYZFzoeebfJllpUIM8Vja7agb+fvTk2Uyn0o9NP7j/5qTL
        GPg+1ebb9DrPaFO6cp0tvdCeZAwI5KV0l3ha1bQQOvg5urolq2tSsEEwDMQHP7hO6XCPGMEcDx0o5HQz
        fpuSINS5D8+CN49JfzVh2FjoMoyBz1qq5k8ow1IzznO5Rg6iq2128xkw1Y2A1fQCIH+DHMJqIpl7zXCR
        DGYTFRA2L19Bcp+qe94kPckYsBkZvS/fBZ+Mbzp0uihzXxxroleDS0KPGUs65t+FmrBR0AGD0xziSmtX
        Wgt17sPdGArUN+mogFCAbht8ZRgDFt1AEFBqVIMqUYYucKWLCooTyVzGoDUT6KXQcbpB2BTXE+luDNR+
        D0w/b75DBbKf0vFzT2wmMP9hU464pzU6lVhqbraL93YZA3oc9P7p0dQ2ZS10wKia6mppjaqlrlDnPtyN
        Ac4b1Q4eT5VnM2HaSpmIwjoAZ8+gmhpQGrFph6mhSOZWM5jOUgFFU2a3peNfodPbzRNEMg9jIFHF/6ju
        B9O1/MdRnmgMBKX7il9rU+7p7KbmBqfpTapZXIaqGQOgz5wj3vcu3Ucn6l7Wwf2I69PcHeFch7cxKOnV
        7mFN524M9NQ0y9Bn1B6U8eez6k1kElV5oFdLvi+SeRiDaM95ukJ2pQZ9B75dUHaMIUDlWxpf1a7PEBOf
        IXU3BqMNm6PT982UVnmoV4N6iWS5E6PNbKO2egPJelS50PnT0yJ0G6i7VZonFMDjp4w7TAWJnxa+SAWf
        OY3dNEG7ngtVyaSbic8SSThUsyTyzxC7tyINjgOjTDq9zZzEz9ky2vbHgVlQ+j74vW7yZ8yndTbzFOoK
        U/fXvCEgyuox+KSzWYOoCVvBvz9Pb8LWh/Ey5uFpYD55sPbgLzeVLL5Xdn+VDiHzYg1F7v1FGolEIsk5
        fOMjavslRHzqGxfJf8gD5IsPj8qbFOZyMvO1qFDKLz5ySL4WkZWEygO6vmn+xIo9XmkW5loJnT8hooFv
        fHg3cQjy0Hv08k2IjBbHPvmaR1R+pWVYsfzxFV29Fg/I36H3GOCbEFFLaHzyJVUIJN1nLyeGuxxISQ6h
        i6tcwC8hctXLbvsbUOHOhYGIQx/fuPB6fokR/XzjI/looDeUdha9R1/fpHDXbq1U8MtIJhWIe1eHY9+E
        Cha6fiylXcATEL6JER+SEXb3a1mxrVB5kDe+cqhfQkUYquuHyOg9upFBJdJ7DxYqSU7iFx8xX/zL8UuM
        nJIvPnKyOOTGkC8hYgQVmqsg3SFDmEeFtNkvKdy1MQh0fgnhw+jaABznTXqzDNU4ffziIufRIXfuYAyU
        7kzexAhfHHvjF18pDEbmFx/eTKh88iVE9uS1WXzkcKGS5CTuxlCgafjL+RMip9PTt0nrlqbXDBXn+caF
        WXkiL6hJmEHv0ZYK3yFU2TYG+qxdfi0jquPYGxiDb2IkNRORM4VKGsPzxt0YXk6KKJEvMWI+FdQSzQeA
        MeSPr+Aa33+tbdWCfvEVXBNZdP0cKvxZ7m07FfJGquJXvJyU3vy8Gl+xuG98xeWkX8wTELxmSIxQqemY
        KFQwoneN7cN4QI5vXEUrGcJi0rmMgT6rAx1/QdJTqCQ5SYHEDMewQKtwfd7mFYu8khBZDrUEdNQ8+OeP
        q+yatEK1TqKKQ2rbI6uSsXygJGeshC6QFFkmf3yka2obUAHa8rWoXEocUsFGKgXiInXUDLwtVCjsJpox
        EHlepdqmQIuIEuLYB+fIsJq91LJyrv/N678MbgWWo8j1ExKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKR
        SCQSiUQikUgkEolEIpFIJBKJRCKR/Afg4/MvBiJfLGSPB2YAAAAASUVORK5CYII=
</value>
  </data>
</root>